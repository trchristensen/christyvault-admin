services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: christyvault-app
        container_name: christyvault-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        command: php-fpm
        ports:
            - "9000:9000"
        environment:
            - APP_ENV=production
            - DB_CONNECTION=pgsql
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=christyvault
            - DB_USERNAME=postgres
            - DB_PASSWORD=postgres
        networks:
            - app-network

    web:
        image: nginx:latest
        container_name: christyvault-web
        ports:
            - "80:80"
        volumes:
            - .:/var/www:ro
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - app
        networks:
            - app-network

    queue:
        image: christyvault-app
        container_name: christyvault-queue
        restart: unless-stopped
        working_dir: /var/www
        command: sh -c "while [ ! -f /var/www/vendor/autoload.php ]; do sleep 1; done && php artisan queue:work"
        volumes:
            - .:/var/www
        depends_on:
            - db
        environment:
            - APP_ENV=production
            - DB_CONNECTION=pgsql
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=christyvault
            - DB_USERNAME=postgres
            - DB_PASSWORD=postgres
        networks:
            - app-network

    db:
        image: postgres:17
        container_name: christyvault-db
        restart: unless-stopped
        environment:
            POSTGRES_DB: christyvault
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        volumes:
            - db_data:/var/lib/postgresql/data
            - ./docker/postgres/init-postgis.sh:/docker-entrypoint-initdb.d/init-postgis.sh
        networks:
            - app-network

volumes:
    db_data:

networks:
    app-network:
        driver: bridge
